package vars

import (
	"github.com/VictoriaMetrics/fastcache"
	"net"
	"regexp"
	"time"
)

const LogFile = "logboost.log"

var ExtraKeysColumnName = "EXTRA_KEYS"

var AuditLogIPRegex = regexp.MustCompile(`.*ClientIP":"(?P<ClientIP>.*?)",.*`)

var GeoLiteASNDBURL = ""
var GeoLiteCityDBURL = ""
var GeoLiteCountryDBURL = ""

var MaxMindFiles = map[string]string{
	"ASN":     "GeoLite2-ASN.mmdb",
	"City":    "GeoLite2-City.mmdb",
	"Country": "GeoLite2-Country.mmdb",
	"Domain":  "GeoIP2-Domain.mmdb",
}

var MaxMindURLs = map[string]string{
	"ASN":     GeoLiteASNDBURL,
	"City":    GeoLiteCityDBURL,
	"Country": GeoLiteCountryDBURL,
	"Domain":  "",
}

var MaxMindStatus = map[string]bool{
	"ASN":     false,
	"City":    false,
	"Country": false,
	"Domain":  false,
}

var MaxMindFileLocations = map[string]string{
	"ASN":     "",
	"City":    "",
	"Country": "",
	"Domain":  "",
}

// Used in func visit to add log paths as we crawl the input directory
var LogsToProcess = make([]string, 0)

var GeoFields = []string{"lb_IP", "lb_ASN", "lb_ASN_Number", "lb_Country", "lb_City"}
var ThreatFields = []string{"lb_ThreatCategories", "lb_ThreatFeedCount", "lb_ThreatFeeds"}
var DNSFields = []string{"lb_Domains", "lb_TLD"}
var WhoisDomainFields = []string{"lb_DomainWhois_CreatedDate", "lb_DomainWhois_UpdatedDate", "lb_DomainWhois_Country", "lb_DomainWhois_Organization"}
var WhoisIPFields = []string{"lb_IPWhois_CIDR", "lb_IPWhois_NetName", "lb_IPWhois_NetType", "lb_IPWhois_Organization", "lb_IPWhois_Created", "lb_IPWhois_Updated", "lb_IPWhois_Country", "lb_IPWhois_Parent"}
var IDBFields = []string{"lb_IDB_cpes", "lb_IDB_hostnames", "lb_IDB_ports", "lb_IDB_tags", "lb_IDB_vulns"}

var Ipv6_regex = regexp.MustCompile(`.*?(?P<ip>(([0-9a-fA-F]{0,4}:){2,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))).*?`)

//var Ipv6_regex = regexp.MustCompile(`.*(?P<ip>(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))).*`)
// Ipv6_regex_new_old = regexp.MustCompile(`.*(?P<ip>([0-9A-Fa-f]{0,4}:){2,7}([0-9A-Fa-f]{1,4})).*`)

// var Ipv4_regex = regexp.MustCompile(`.*(?P<ip>((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}).*`)
var Ipv4_regex = regexp.MustCompile(`.*?(?P<ip>\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b).*?`)
var tenDot = net.IPNet{
	IP:   net.ParseIP("10.0.0.0"),
	Mask: net.CIDRMask(8, 32),
}
var sevenTwoDot = net.IPNet{
	IP:   net.ParseIP("172.16.0.0"),
	Mask: net.CIDRMask(12, 32),
}
var oneNineTwoDot = net.IPNet{
	IP:   net.ParseIP("192.168.0.0"),
	Mask: net.CIDRMask(16, 32),
}

// Controls whether we collect files in visit() beyond .log, .csv and .txt - set by -getall param
var GetAllFiles = false

var DnsCacheFile = "dns.cache"
var WhoisCacheFile = "whois.cache"
var IDBCacheFile = "idb.cache"

// 1 GB max cache size
var Dnsfastcache = fastcache.LoadFromFileOrNew(DnsCacheFile, 1_000_000_000)
var Whoisfastcache = fastcache.LoadFromFileOrNew(WhoisCacheFile, 1_000_000_000)
var IDBfastcache = fastcache.LoadFromFileOrNew(IDBCacheFile, 1_000_000_000)

// https://github.com/X4BNet/lists_vpn/blob/main/input/datacenter/ASN.txt
var DataCenterASNNumbers = []string{"45090", "3223", "3561", "3842", "4250", "4323", "4694", "5577", "4713", "6724", "6870", "6939", "7203", "7489", "7506", "7850", "7979", "8075", "8100", "8455", "8560", "8972", "9370", "10297", "10439", "10929", "11588", "11831", "11878", "12586", "12876", "12989", "13213", "13739", "13926", "14061", "14127", "14618", "15003", "15083", "15169", "15395", "15497", "15510", "15626", "15734", "16125", "16262", "16276", "16284", "16397", "16509", "16628", "17216", "18450", "18779", "18978", "19084", "19318", "19437", "19531", "19624", "19844", "19871", "19969", "20021", "20264", "20454", "20473", "20598", "20738", "20773", "20836", "20860", "21100", "21159", "21321", "21859", "22363", "22552", "22781", "23033", "23342", "23352", "24482", "24768", "24875", "24940", "24961", "24971", "25163", "25369", "25379", "25780", "25820", "27257", "28753", "29066", "29073", "29182", "29302", "29354", "29550", "29691", "29802", "29838", "29854", "30083", "30176", "30475", "30633", "30693", "30900", "30998", "31034", "31103", "32097", "32181", "32244", "32475", "32489", "32613", "32780", "33070", "33083", "33182", "33302", "33330", "33387", "33438", "33480", "33724", "33785", "33891", "34305", "34971", "34989", "35017", "35366", "35415", "35470", "35662", "35908", "35916", "36024", "36114", "36290", "36351", "36352", "36666", "36887", "36970", "37018", "37088", "37153", "37170", "37209", "37230", "37248", "37269", "37280", "37308", "37347", "37377", "37472", "37506", "37521", "37540", "37643", "37661", "37692", "37714", "38001", "39020", "39326", "39351", "39392", "39572", "40156", "40244", "40676", "40824", "40861", "41653", "41665", "42160", "42331", "42473", "42695", "42708", "42730", "42831", "43146", "49505", "43289", "43317", "43350", "44050", "44066", "45102", "45187", "45470", "45671", "45815", "46261", "46430", "46475", "46562", "46664", "46805", "46816", "46844", "47328", "47447", "47588", "49349", "49367", "49453", "49532", "49544", "49981", "50297", "50613", "50673", "51159", "51167", "51191", "51395", "51430", "51731", "51765", "51852", "52048", "52173", "52219", "53013", "53340", "53559", "53597", "53667", "53755", "53850", "53889", "54104", "54203", "54455", "54489", "54500", "54540", "55225", "55286", "55536", "55933", "55967", "56322", "56630", "56934", "57043", "57169", "57230", "57858", "58073", "58305", "59253", "59349", "59432", "59504", "59729", "59764", "60011", "60068", "60118", "60404", "60485", "60505", "60558", "60567", "60781", "61102", "61157", "61317", "61440", "62217", "62240", "62282", "62370", "62471", "62540", "62567", "63008", "63018", "63119", "63128", "63199", "63473", "63949", "64245", "64484", "132816", "133296", "133480", "133752", "134451", "136258", "197155", "197328", "198310", "198605", "199653", "199883", "200019", "200039", "201011", "201525", "202053", "202836", "203523", "203629", "204196", "205053", "327705", "327784", "327813", "327942", "328035", "394256", "394330", "394380", "395089", "395111", "395978", "20248", "44901", "200904", "53057", "200532", "50968", "135822", "55293", "57286", "201200", "24549", "39458", "200000", "14576", "54290", "206898", "60117", "201553", "54825", "31472", "8556", "29119", "60476", "25532", "49949", "51698", "42442", "11274", "57345", "54817", "53342", "33569", "201983", "132425", "197395", "42699", "31698", "42612", "29311", "54527", "63213", "27175", "13209", "29140", "27223", "31659", "49834", "49693", "30152", "19133", "198414", "45201", "31981", "62605", "61280", "53332", "61147", "51109", "19234", "40438", "58797", "26978", "29748", "35974", "262990", "43021", "39704", "62899", "53281", "59615", "55761", "52335", "16973", "196827", "32647", "14992", "198968", "196745", "62071", "132869", "56106", "32911", "24931", "57669", "48896", "45481", "132509", "39839", "63129", "53370", "25048", "28747", "46433", "55051", "18570", "13955", "16535", "22903", "9823", "46945", "263032", "36536", "50986", "199733", "48825", "35914", "33552", "52236", "28855", "198347", "40728", "18120", "53914", "55720", "27640", "62563", "202118", "9290", "45887", "51050", "20068", "49485", "40374", "14415", "46873", "14384", "54555", "263237", "53918", "4851", "32306", "133229", "28216", "36236", "42210", "51248", "49815", "34649", "41562", "33260", "24220", "52347", "45486", "53055", "51290", "132225", "133120", "42776", "55799", "48446", "263093", "56732", "42399", "47385", "40539", "42244", "47549", "200147", "393326", "198171", "57773", "47583", "43472", "32338", "9166", "62082", "198651", "24725", "29067", "197902", "42418", "29097", "196645", "56110", "23535", "29869", "62756", "26484", "25926", "15189", "20401", "24679", "25128", "39756", "32400", "9412", "9667", "51294", "23052", "28099", "45693", "17881", "17669", "17918", "50926", "201634", "22611", "54641", "132071", "10207", "45577", "132070", "262603", "29883", "24558", "38279", "199997", "50465", "14120", "11235", "50655", "17019", "31240", "199481", "16862", "47161", "56784", "59791", "59677", "202023", "199990", "50872", "54839", "58936", "11230", "62310", "38894", "47172", "262287", "46260", "14442", "133143", "197648", "39451", "58922", "27589", "42400", "133393", "201597", "28997", "60800", "33322", "199129", "197372", "57752", "201670", "14244", "22152", "34541", "196678", "43198", "47625", "62049", "35295", "42311", "53589", "59705", "36791", "14160", "34432", "41062", "59135", "201630", "25260", "23108", "40281", "31590", "10532", "22720", "27357", "7595", "26481", "29713", "62651", "62838", "30849", "14987", "47577", "54334", "63916", "50915", "21217", "59816", "23273", "59632", "29452", "59795", "60739", "15919", "49313", "57879", "56617", "62088", "45179", "27597", "201702", "32740", "58667", "12617", "199847", "25642", "14567", "35278", "197914", "41079", "1442", "43620", "197439", "198313", "42705", "44398", "13909", "34745", "24958", "17971", "47143", "59854", "57682", "3722", "13647", "20450", "30235", "47205", "23881", "198047", "14986", "17920", "32275", "50608", "199213", "262170", "201862", "43541", "24381", "10200", "14708", "27229", "48093", "42465", "7598", "55229", "7349", "33251", "52465", "52270", "45152", "8477", "198153", "52925", "61412", "262978", "53225", "41427", "53101", "41369", "35467", "59554", "52674", "24611", "48812", "40715", "201449", "52321", "29331", "201709", "53221", "198432", "51241", "56799", "26277", "58113", "28333", "42120", "6718", "20692", "17439", "132717", "9925", "132779", "42622", "6188", "40819", "24997", "38107", "36408", "57363", "46177", "62026", "61107", "35540", "59711", "61046", "34011", "202015", "394474", "205016", "204601", "46606", "25291", "206246", "37518", "39832", "60729", "208323", "202276", "213010", "35913", "136907", "24806", "15694", "41406", "57367", "197226", "200088", "42927", "29522", "203417", "47544", "43962", "208566", "12824", "15967", "201814", "60713", "206589", "47223", "20552", "48505", "31242", "59472", "29593", "56380", "15391", "39566", "48031", "60362", "61138", "206216", "210779", "149020", "203758", "399804", "23470", "199785", "33696", "34927", "30836", "210329", "40476", "42532", "51862", "26347", "8560", "60362", "26548", "52000", "16652", "9009", "42675"}

// whois
var WhoisServers = []string{"whois.iana.org"}
var WhoisPort = "43"
var WhoisTimeout = 3 * time.Second
